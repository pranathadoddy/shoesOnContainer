// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductCatalogApi.Data;

namespace ProductCatalogApi.Migrations
{
    [DbContext(typeof(CatalogContext))]
    [Migration("20200130131726_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.catalog_brand_hilo", "'catalog_brand_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.catalog_hilo", "'catalog_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.catalog_type_hilo", "'catalog_type_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProductCatalogApi.Domain.CatalogBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "catalog_brand_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("CatalogBrand");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Addidas"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Puma"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Slazenger"
                        });
                });

            modelBuilder.Entity("ProductCatalogApi.Domain.CatalogItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "catalog_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("CatalogBrandId")
                        .HasColumnType("int");

                    b.Property<int>("CatalogTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("CatalogBrandId");

                    b.HasIndex("CatalogTypeId");

                    b.ToTable("Catalog");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CatalogBrandId = 3,
                            CatalogTypeId = 2,
                            Description = "Shoes for next century",
                            Name = "World Star",
                            PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/1",
                            Price = 199.5m
                        },
                        new
                        {
                            Id = 2,
                            CatalogBrandId = 2,
                            CatalogTypeId = 1,
                            Description = "will make you world champions",
                            Name = "White Line",
                            PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/2",
                            Price = 88.50m
                        },
                        new
                        {
                            Id = 3,
                            CatalogBrandId = 3,
                            CatalogTypeId = 2,
                            Description = "You have already won gold medal",
                            Name = "Prism White Shoes",
                            PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/3",
                            Price = 129m
                        },
                        new
                        {
                            Id = 4,
                            CatalogBrandId = 2,
                            CatalogTypeId = 2,
                            Description = "Olympic runner",
                            Name = "Foundation Hitech",
                            PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/4",
                            Price = 12m
                        },
                        new
                        {
                            Id = 5,
                            CatalogBrandId = 1,
                            CatalogTypeId = 2,
                            Description = "Roslyn Red Sheet",
                            Name = "Roslyn White",
                            PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/5",
                            Price = 188.5m
                        },
                        new
                        {
                            Id = 6,
                            CatalogBrandId = 2,
                            CatalogTypeId = 2,
                            Description = "Lala Land",
                            Name = "Blue Star",
                            PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/6",
                            Price = 112m
                        },
                        new
                        {
                            Id = 7,
                            CatalogBrandId = 1,
                            CatalogTypeId = 2,
                            Description = "High in the sky",
                            Name = "Roslyn Green",
                            PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/7",
                            Price = 212m
                        },
                        new
                        {
                            Id = 8,
                            CatalogBrandId = 1,
                            CatalogTypeId = 1,
                            Description = "Light as carbon",
                            Name = "Deep Purple",
                            PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/8",
                            Price = 238.5m
                        },
                        new
                        {
                            Id = 9,
                            CatalogBrandId = 2,
                            CatalogTypeId = 1,
                            Description = "High Jumper",
                            Name = "Addidas<White> Running",
                            PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/9",
                            Price = 129m
                        },
                        new
                        {
                            Id = 10,
                            CatalogBrandId = 3,
                            CatalogTypeId = 2,
                            Description = "Dunker",
                            Name = "Elequent",
                            PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/10",
                            Price = 12m
                        },
                        new
                        {
                            Id = 11,
                            CatalogBrandId = 2,
                            CatalogTypeId = 1,
                            Description = "All round",
                            Name = "Inredeible",
                            PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/11",
                            Price = 248.5m
                        },
                        new
                        {
                            Id = 12,
                            CatalogBrandId = 1,
                            CatalogTypeId = 2,
                            Description = "Pricesless",
                            Name = "London Sky",
                            PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/12",
                            Price = 412m
                        },
                        new
                        {
                            Id = 13,
                            CatalogBrandId = 3,
                            CatalogTypeId = 3,
                            Description = "Tennis Star",
                            Name = "Elequent",
                            PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/13",
                            Price = 123m
                        },
                        new
                        {
                            Id = 14,
                            CatalogBrandId = 2,
                            CatalogTypeId = 3,
                            Description = "Wimbeldon",
                            Name = "London Star",
                            PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/14",
                            Price = 218.5m
                        },
                        new
                        {
                            Id = 15,
                            CatalogBrandId = 1,
                            CatalogTypeId = 3,
                            Description = "Rolan Garros",
                            Name = "Paris Blues",
                            PictureUrl = "http://externalcatalogbaseurltobereplaced/api/pic/15",
                            Price = 312m
                        });
                });

            modelBuilder.Entity("ProductCatalogApi.Domain.CatalogType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "catalog_type_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("CatalogType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Running"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Basketball"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Tennis"
                        });
                });

            modelBuilder.Entity("ProductCatalogApi.Domain.CatalogItem", b =>
                {
                    b.HasOne("ProductCatalogApi.Domain.CatalogBrand", "CatalogBrand")
                        .WithMany()
                        .HasForeignKey("CatalogBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductCatalogApi.Domain.CatalogType", "CatalogType")
                        .WithMany()
                        .HasForeignKey("CatalogTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
